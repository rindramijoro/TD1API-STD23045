openapi: 3.0.3
info:
  title: STD23045 - TD5
  version: "1.0.3"
servers:
  - url: https://localhost.STD23045.com
paths:
  /customers:
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: true
        - in: query
          name: pageSize
          schema:
            type: integer
          required: true
      responses:
        200:
          description: List of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Customer"
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCustomer"
        required: true
      responses:
        201:
          description: Created customer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer"
        required: true
      responses:
        200:
          description: Updated customer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCustomerPartial"
        required: true
      responses:
        200:
          description: Partially updated customer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
  /customers/{customerId}:
    get:
      parameters:
        - in: path
          name: customerId
          schema:
            type: string
          required: true
      responses:
        200:
          description: Details of a specific customer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
  /customers/{customerId}/orders:
    get:
      parameters:
        - in: path
          name: customerId
          schema:
            type: string
          required: true
        - in: query
          name: page
          schema:
            type: integer
          required: true
        - in: query
          name: pageSize
          schema:
            type: integer
          required: true
      responses:
        200:
          description: List of orders for the customer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
    post:
      parameters:
        - in: path
          name: customerId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrder"
        required: true
      responses:
        201:
          description: Created order for the customer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
    put:
      parameters:
        - in: path
          name: customerId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateOrder"
        required: true
      responses:
        200:
          description: Updated order for the customer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
  /orders/{orderId}:
    get:
      parameters:
        - in: path
          name: orderId
          schema:
            type: string
          required: true
      responses:
        200:
          description: Details of a specific order
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"

components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        age:
          type: integer
    CreateCustomer:
      type: object
      properties:
        name:
          type: string
        age:
          type: integer
    UpdateCustomerPartial:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        age:
          type: integer
    Order:
      type: object
      properties:
        id:
          type: string
        reference:
          type: string
        meals:
          type: array
          items:
            type: object
            properties:
              meal:
                $ref: "#/components/schemas/Meal"
              quantity:
                type: integer
                format: int32
        orderDatetime:
          type: string
          format: date-time
    CreateOrder:
      type: object
      properties:
        reference:
          type: string
        meals:
          type: array
          items:
            type: object
            properties:
              mealId:
                type: string
              quantity:
                type: integer
                format: int32
    UpdateOrder:
      type: object
      properties:
        reference:
          type: string
        meals:
          type: array
          items:
            type: object
            properties:
              mealId:
                type: string
              quantity:
                type: integer
                format: int32
    Meal:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        price:
          type: number
          format: decimal
